import java.io.*;
import java.util.*;

class Expense {
    String date;
    String category;
    double amount;

    public Expense(String date, String category, double amount) {
        this.date = date;
        this.category = category;
        this.amount = amount;
    }
}

class ExpenseManager {
    private List<Expense> expenses;
    private Scanner scanner;

    public ExpenseManager() {
        expenses = new ArrayList<>();
        scanner = new Scanner(System.in);
    }

    public void run() {
        int choice;
        do {
            System.out.println("\nExpense Manager Menu:");
            System.out.println("1. Register User");
            System.out.println("2. Add Expense");
            System.out.println("3. View Expenses");
            System.out.println("4. Category-wise Summation");
            System.out.println("5. Save Expenses");
            System.out.println("6. Load Expenses");
            System.out.println("0. Exit");
            System.out.print("Enter your choice: ");
            
            choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    registerUser();
                    break;
                case 2:
                    addExpense();
                    break;
                case 3:
                    viewExpenses();
                    break;
                case 4:
                    categoryWiseSummation();
                    break;
                case 5:
                    saveExpensesToFile();
                    break;
                case 6:
                    loadExpensesFromFile();
                    break;
                case 0:
                    System.out.println("Exiting the Expense Manager. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 0);
    }

    private void registerUser() {
        System.out.print("Enter your username: ");
        String username = scanner.nextLine();
        // Additional user registration logic can be added here
        System.out.println("User registered successfully!");
    }

    private void addExpense() {
        System.out.print("Enter the expense date (MM/DD/YYYY): ");
        String date = scanner.nextLine();
        System.out.print("Enter the expense category: ");
        String category = scanner.nextLine();
        System.out.print("Enter the expense amount: ");
        double amount = scanner.nextDouble();
        scanner.nextLine(); // Consume the newline character

        Expense expense = new Expense(date, category, amount);
        expenses.add(expense);

        System.out.println("Expense added successfully!");
    }

    private void viewExpenses() {
        if (expenses.isEmpty()) {
            System.out.println("No expenses found.");
        } else {
            System.out.println("Expense Listing:");
            for (Expense expense : expenses) {
                System.out.println("Date: " + expense.date +
                                   ", Category: " + expense.category +
                                   ", Amount: " + expense.amount);
            }
        }
    }

    private void categoryWiseSummation() {
        if (expenses.isEmpty()) {
            System.out.println("No expenses found.");
        } else {
            Map<String, Double> categorySum = new HashMap<>();

            for (Expense expense : expenses) {
                categorySum.merge(expense.category, expense.amount, Double::sum);
            }

            System.out.println("Category-wise Summation:");
            for (Map.Entry<String, Double> entry : categorySum.entrySet()) {
                System.out.println(entry.getKey() + ": " + entry.getValue());
            }
        }
    }

    private void saveExpensesToFile() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("expenses.ser"))) {
            oos.writeObject(expenses);
            System.out.println("Expenses saved successfully!");
        } catch (IOException e) {
            System.out.println("Error saving expenses to file: " + e.getMessage());
        }
    }

    private void loadExpensesFromFile() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("expenses.ser"))) {
            expenses = (List<Expense>) ois.readObject();
            System.out.println("Expenses loaded successfully!");
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("Error loading expenses from file: " + e.getMessage());
        }
    }
}

public class Main {
    public static void main(String[] args) {
        ExpenseManager expenseManager = new ExpenseManager();
        expenseManager.run();
    }
}
